// Generated by CoffeeScript 1.8.0
(function() {
  var Log, fs, rotate;

  rotate = require('log-rotate');

  fs = require('fs');

  Log = (function() {

    /*
      @param file file path for log
      @param fileSize размер файла после чего запускать rotate 0 - unlimited
      @param count - количество файлов для rotate 0 - бесконечено
     */
    function Log(file, fileSize, count) {
      this.file = file;
      this.fileSize = fileSize;
      this.count = count;
      this.count = this.count ? {
        'count': this.count
      } : {};
    }

    Log.prototype.log = function(msg) {
      console.log(msg);
      if (!this.file) {
        throw new Error('Logger file is not ready');
      }
      return fs.appendFile(this.file, this.modifyMessage(msg), {
        flag: 'a+'
      }, (function(_this) {
        return function(err) {
          var stat;
          if (err) {
            throw err;
          }
          if (_this.fileSize) {
            stat = fs.statSync(_this.file);
            if (stat.size > _this.fileSize) {
              return rotate(_this.file, _this.count, function(err) {
                if (err) {
                  throw err;
                }
              });
            }
          }
        };
      })(this));
    };

    Log.prototype.modifyMessage = function(msg) {
      var date, file;
      date = new Date();
      date = date.toISOString().slice(0, 10) + ' ' + ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + ':' + ('0' + date.getSeconds()).slice(-2);
      try {
        file = new Error().stack.split("\n")[3].split("/").slice(-1)[0].split(")")[0];
      } catch (_error) {
        file = "undefined";
      }
      return "" + date + "|" + file + "\t|" + msg + "\n";
    };

    return Log;

  })();

  module.exports = Log;

}).call(this);
