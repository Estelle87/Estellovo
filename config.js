// Generated by CoffeeScript 1.8.0
(function() {
  var Config, fs, ini;

  ini = require('ini');

  fs = require('fs');

  Config = (function() {
    function Config() {
      this.config = ini.parse(fs.readFileSync(global.CONFIG_FILE, 'utf-8'));
      console.log("Config file " + global.CONFIG_FILE + " loaded");
    }

    Config.prototype.getHost = function() {
      return ini.unsafe(this.config.server.host);
    };

    Config.prototype.getPort = function() {
      return ini.unsafe(this.config.server.port);
    };

    Config.prototype.getComPort = function() {
      return ini.unsafe(this.config.com.port);
    };

    Config.prototype.getComConfig = function() {
      return {
        baudRate: parseInt(ini.unsafe(this.config.com.baudRate)),
        dataBits: parseInt(ini.unsafe(this.config.com.dataBits)),
        stopBits: parseInt(ini.unsafe(this.config.com.stopBits)),
        parity: ini.unsafe(this.config.com.parity)
      };
    };

    Config.prototype.getLogPath = function() {
      return ini.unsafe(this.config.log.path);
    };

    Config.prototype.getLogSize = function() {
      return ini.unsafe(this.config.log.size);
    };

    Config.prototype.getLogRotate = function() {
      return ini.unsafe(this.config.log.rotate);
    };

    Config.prototype.useHttps = function() {
      return parseInt(ini.unsafe(this.config.server.https));
    };

    Config.prototype.getHttpsKey = function() {
      return ini.unsafe(this.config.server.httpsKey);
    };

    Config.prototype.getHttpsCert = function() {
      return ini.unsafe(this.config.server.httpsCert);
    };

    Config.prototype.setComPort = function(com) {
      return this.config.com.port = ini.safe(com);
    };

    Config.prototype.getSigmaWindow = function() {
      return ini.unsafe(this.config.sigma.window);
    };

    Config.prototype.getSigmaColor = function() {
      return ini.unsafe(this.config.sigma.number);
    };

    Config.prototype.getSigmaNumberColor = function() {
      return ini.unsafe(this.config.sigma.numberColor);
    };

    Config.prototype.setSigmaWindow = function(window) {
      return this.config.sigma.window = ini.unsafe(window);
    };

    Config.prototype.setSigmaColor = function(color) {
      return this.config.sigma.color = ini.unsafe(color);
    };

    Config.prototype.setSigmaNumberColor = function(color) {
      return this.config.sigma.color = ini.unsafe(color);
    };

    Config.prototype.save = function() {
      return fs.writeFileSync(global.CONFIG_FILE, ini.stringify(this.config));
    };

    Config.prototype.getFullConfig = function() {
      return this.config;
    };

    return Config;

  })();

  module.exports = new Config();

}).call(this);
